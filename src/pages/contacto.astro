---
// src/pages/contacto.astro
import Layout from "../layouts/Layout.astro";
import Header from "../components/sections/Nosotros/Header.astro";
---

<Layout>
    <Header />

    <section
        class="max-w-7xl mx-auto items-center grid grid-cols-1 lg:grid-cols-2 justify-between gap-16 px-4 lg:px-0 py-12 lg:py-24"
    >
        <form id="contact-form" class="flex flex-col w-full gap-8">
            <input
                type="text"
                id="nombre"
                name="nombre"
                class="border w-full rounded-lg border-[#051314] px-4 py-2 text-lg transition-colors focus:border-[#666695] focus:outline-none focus:ring-2 focus:ring-[#666695]/50"
                placeholder="Nombre"
                required
            />
            <input
                type="text"
                id="apellido"
                name="apellido"
                class="border w-full rounded-lg border-[#051314] px-4 py-2 text-lg transition-colors focus:border-[#666695] focus:outline-none focus:ring-2 focus:ring-[#666695]/50"
                placeholder="Apellido"
                required
            />
            <input
                type="tel"
                id="telefono"
                name="telefono"
                class="border w-full rounded-lg border-[#051314] px-4 py-2 text-lg transition-colors focus:border-[#666695] focus:outline-none focus:ring-2 focus:ring-[#666695]/50"
                placeholder="Teléfono"
            />
            <input
                type="email"
                id="email"
                name="email"
                class="border w-full rounded-lg border-[#051314] px-4 py-2 text-lg transition-colors focus:border-[#666695] focus:outline-none focus:ring-2 focus:ring-[#666695]/50"
                placeholder="E-mail"
                required
            />
            <textarea
                name="mensaje"
                id="mensaje"
                class="border w-full rounded-lg border-[#051314] px-4 py-2 text-lg transition-colors focus:border-[#666695] focus:outline-none focus:ring-2 focus:ring-[#666695]/50 h-32 resize-none"
                placeholder="Mensaje..."
                required></textarea>
            <button
                type="submit"
                id="submit-button"
                class="bg-[#666695] text-[#EFE8E6] p-2 rounded-lg w-full lg:w-1/2 text-lg transition-all duration-300 ease-in-out hover:bg-[#55557e] disabled:bg-[#3A411D] disabled:cursor-not-allowed"
            >
                Enviar
            </button>
        </form>

        <div class="hidden lg:flex items-start justify-center flex-col">
            <h2 class="text-[#051314] font-semibold text-4xl">
                Hablemos de tu próximo <br /> proyecto
            </h2>
            <img src="/contactp.png" alt="Contacto" class="w-full mt-4" />
        </div>
    </section>
</Layout>

<script>
    const contactForm = document.getElementById(
        "contact-form",
    ) as HTMLFormElement;
    const submitButton = document.getElementById(
        "submit-button",
    ) as HTMLButtonElement;

    const validateForm = (): boolean => {
        let isValid = true;
        const requiredFields = contactForm.querySelectorAll<
            HTMLInputElement | HTMLTextAreaElement
        >("[required]");
        requiredFields.forEach((field) => {
            field.classList.remove("border-red-500");
            field.classList.add("border-[#051314]");
            if (!field.value.trim()) {
                isValid = false;
                field.classList.add("border-red-500");
                field.classList.remove("border-[#051314]");
            }
            if (field.type === "email") {
                const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                if (!emailRegex.test(field.value)) {
                    isValid = false;
                    field.classList.add("border-red-500");
                    field.classList.remove("border-[#051314]");
                }
            }
        });
        return isValid;
    };

    const handleFormSubmit = async () => {
        submitButton.disabled = true;
        submitButton.textContent = "Enviando...";

        const formData = new FormData(contactForm);

        try {
            const response = await fetch("/api/messages", {
                method: "POST",
                body: formData,
            });

            if (response.ok) {
                submitButton.innerHTML =
                    "¡Mensaje enviado!<br>Te responderemos a la brevedad.";
                submitButton.classList.remove("lg:w-1/2");
                submitButton.classList.add("w-full");
                contactForm.reset();
            } else {
                const result = await response.json();
                throw new Error(
                    result.message || "Hubo un error al enviar el mensaje.",
                );
            }
        } catch (err) {
            submitButton.textContent = "Error. Intentá de nuevo.";
            submitButton.disabled = false;
            console.error(err);
        }
    };

    contactForm.addEventListener("submit", (event: SubmitEvent) => {
        event.preventDefault();
        if (validateForm()) {
            handleFormSubmit();
        } else {
            console.log("Form validation failed.");
        }
    });
</script>
