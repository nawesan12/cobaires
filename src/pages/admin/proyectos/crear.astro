---
// src/pages/dashboard/proyectos/crear.astro
import Layout from "../../../layouts/Layout.astro";
---

<Layout title="Crear Nuevo Proyecto">
  <main class="bg-gray-50 min-h-screen p-4 sm:p-6 lg:p-8">
    <div class="max-w-4xl mx-auto">
      <div class="mb-10">
        {/* FIX: Corrected link to point to /dashboard/... */}
        <a href="/dashboard/proyectos" class="text-blue-600 hover:underline mb-2 inline-block">&larr; Volver a Proyectos</a>
        <h1 class="text-4xl font-bold text-gray-800">Crear Nuevo Proyecto</h1>
        <p class="text-lg text-gray-500">Completá los detalles a continuación para añadir un nuevo proyecto al portfolio.</p>
      </div>

      <div class="bg-white p-8 rounded-2xl shadow-lg">
        <form id="create-project-form" class="space-y-6">
          <!-- Title -->
          <div>
            <label for="title" class="block text-sm font-medium text-gray-700 mb-1">Título del Proyecto</label>
            <input type="text" name="title" id="title" required placeholder="Ej: Casa en el Bosque" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition" />
          </div>

          <!-- Description -->
          <div>
            <label for="description" class="block text-sm font-medium text-gray-700 mb-1">Descripción</label>
            <textarea name="description" id="description" rows="6" required placeholder="Describí las características principales del proyecto..." class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition resize-none"></textarea>
          </div>

          <!-- Grid for details -->
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label for="type" class="block text-sm font-medium text-gray-700 mb-1">Tipo</label>
              <input type="text" name="type" id="type" placeholder="Ej: Proyección y dirección" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition" />
            </div>
            <div>
              <label for="year" class="block text-sm font-medium text-gray-700 mb-1">Año</label>
              <input type="text" name="year" id="year" placeholder="Ej: 2023-2024" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition" />
            </div>
            <div>
              <label for="location" class="block text-sm font-medium text-gray-700 mb-1">Ubicación</label>
              <input type="text" name="location" id="location" placeholder="Ej: Mar del Plata, Buenos Aires" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition" />
            </div>
            <div>
              <label for="surface" class="block text-sm font-medium text-gray-700 mb-1">Superficie</label>
              <input type="text" name="surface" id="surface" placeholder="Ej: 266 m²" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition" />
            </div>
            <div>
              <label for="client" class="block text-sm font-medium text-gray-700 mb-1">Cliente</label>
              <input type="text" name="client" id="client" placeholder="Ej: Privado" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition" />
            </div>
          </div>

          <!-- Image Management -->
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">Imágenes del Proyecto</label>
            <p class="text-xs text-gray-500 mb-2">Seleccioná la imagen que se usará como portada del proyecto.</p>

            <div class="mt-2">
                 <label for="image-upload" class="cursor-pointer text-sm font-medium text-blue-600 hover:text-blue-700">
                     + Añadir imágenes...
                     <input id="image-upload" name="newImages" type="file" class="sr-only" multiple required accept="image/png, image/jpeg, image/webp" />
                 </label>
            </div>
            <div id="previews-container" class="hidden mt-4 grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4"></div>
          </div>

          <!-- Submit Button -->
          <div class="text-right pt-4">
            <button type="submit" id="submit-button" class="inline-flex items-center justify-center py-3 px-6 border border-transparent shadow-sm text-base font-medium rounded-lg text-white bg-blue-600 hover:bg-blue-700 transition disabled:bg-gray-400">
              Crear Proyecto
            </button>
          </div>
        </form>
        <div id="status-message" class="mt-6 text-center font-medium"></div>
      </div>
    </div>
  </main>
</Layout>

<script>
  const form = document.getElementById("create-project-form");
  const submitButton = document.getElementById("submit-button");
  const statusMessage = document.getElementById("status-message");
  const imageUpload = document.getElementById("image-upload");
  const previewsContainer = document.getElementById("previews-container");

  // Handle new image uploads and show previews
  imageUpload.addEventListener("change", () => {
    if (imageUpload.files.length > 0) {
      previewsContainer.classList.remove("hidden");
      previewsContainer.innerHTML = ""; // Clear existing previews
      Array.from(imageUpload.files).forEach((file, index) => {
        const reader = new FileReader();
        reader.onload = (e) => {
          const wrapper = document.createElement('div');
          wrapper.className = 'relative group';

          const img = document.createElement("img");
          img.src = e.target.result;
          img.className = "w-full h-32 object-cover rounded-md";
          wrapper.appendChild(img);

          // Add a radio button overlay for thumbnail selection
          const radioLabel = document.createElement('label');
          radioLabel.className = 'absolute inset-0 flex items-center justify-center bg-black/40 cursor-pointer opacity-0 group-hover:opacity-100 transition-opacity rounded-md';

          const radioInput = document.createElement('input');
          radioInput.type = 'radio';
          radioInput.name = 'thumbnailSelection';
          radioInput.value = index;
          radioInput.className = 'h-6 w-6 accent-blue-500';

          if (index === 0) {
              radioInput.checked = true; // Default check the first image
          }

          radioLabel.appendChild(radioInput);
          wrapper.appendChild(radioLabel);

          // Add a badge to the currently checked thumbnail
          const thumbnailBadge = document.createElement('div');
          thumbnailBadge.textContent = 'Portada';
          thumbnailBadge.className = 'badge absolute top-1 right-1 bg-blue-600 text-white text-xs font-bold px-2 py-1 rounded hidden';
          if(radioInput.checked) thumbnailBadge.classList.remove('hidden');
          wrapper.appendChild(thumbnailBadge);

          previewsContainer.appendChild(wrapper);
        };
        reader.readAsDataURL(file);
      });
    }
  });

  // Update the "Portada" badge visibility when a new thumbnail is selected
  previewsContainer.addEventListener('change', (e) => {
      if (e.target.name === 'thumbnailSelection') {
          // Hide all badges
          document.querySelectorAll('.badge').forEach(badge => badge.classList.add('hidden'));
          // Show the badge for the selected image's parent
          e.target.closest('.relative.group').querySelector('.badge').classList.remove('hidden');
      }
  });

  // Handle form submission
  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    const originalButtonText = submitButton.textContent;
    submitButton.disabled = true;
    submitButton.textContent = "Creando...";
    statusMessage.textContent = "";

    const formData = new FormData(form);

    try {
      const response = await fetch(`/api/projects`, {
        method: "POST",
        body: formData,
      });
      const result = await response.json();
      if (!response.ok) {
        throw new Error(result.message || "Algo salió mal al crear el proyecto.");
      }

      statusMessage.textContent = "¡Proyecto creado con éxito!";
      statusMessage.className = "mt-6 text-center font-medium text-green-600";

      // FIX: Corrected redirect to point to /dashboard/...
      setTimeout(() => {
        window.location.href = "/dashboard/proyectos";
      }, 1500);

    } catch (error) {
      statusMessage.textContent = error.message;
      submitButton.disabled = false;
      submitButton.textContent = originalButtonText;
    }
  });
</script>
