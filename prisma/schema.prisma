datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

// --- Project Models (keep these as they are) ---
model Project {
  id          Int            @id @default(autoincrement())
  createdAt   DateTime       @default(now())
  title       String
  description String
  type        String?
  year        String?
  location    String?
  surface     String?
  client      String?
  images      ProjectImage[]
}

model ProjectImage {
  id        Int     @id @default(autoincrement())
  url       String
  projectId Int
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
}

// --- CRM Models ---

// A Conversation represents a single thread initiated by a contact.
model Conversation {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  contactName  String
  contactEmail String
  phone        String?

  subject        String
  initialMessage String @db.Text

  status String @default("OPEN") // e.g., OPEN, CLOSED

  // A conversation has many replies
  replies Reply[]
}

// A Reply is a single message within a conversation.
model Reply {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  content String @db.Text

  // 'INBOUND' = from the contact, 'OUTBOUND' = from you
  direction String

  // Relation back to the parent conversation
  conversationId Int
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
}
